name: Build and push Docker image
on:
    push:
        branches:
            - main
jobs:
  test:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: npx jest --coverage

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
      runs-on: ubuntu-latest
      needs: test
      steps:
          - name: Checkout
            uses: actions/checkout@v2
          - name: Set up Docker Buildx
            id: buildx
            uses: docker/setup-buildx-action@v1
          - name: Cache Docker layers
            uses: actions/cache@v2
            with:
                path: /tmp/.buildx-cache
                key: ${{ runner.os }}-buildx-${{ github.sha }}
                restore-keys: |
                    ${{ runner.os }}-buildx-
          - uses: docker/login-action@v1
            with:
                username: ${{ secrets.DOCKER_HUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          - name: Build and push
            id: docker_build
            uses: docker/build-push-action@v4
            with:
                context: ./
                file: ./docker/Dockerfile
                builder: ${{ steps.buildx.outputs.name }}
                push: true
                tags: vparekh17/aiserver
                cache-from: type=local,src=/tmp/.buildx-cache
                cache-to: type=local,dest=/tmp/.buildx-cache
          - name: Image digest
            run: echo ${{ steps.docker_build.outputs.digest }}
            
    # Deploy:
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout the repo
    #       uses: actions/checkout@v2

    #     - name: Deploy to EC2
    #       uses: appleboy/ssh-action@master
    #       with:
    #         host: ${{ secrets.HOST }}
    #         username: ${{ secrets.USERNAME }}
    #         key: ${{ secrets.PRIVATE_KEY }}
    #         script: |
    #           cd ~
    #           pm2 stop all
    #           rm -rf openai-chatbot
    #           git clone https://github.com/vinitparekh17/openai-server.git openai-chatbot
    #           cd openai-chatbot
    #           yarn install
    #           yarn build
    #           pm2 start dist/index.js
